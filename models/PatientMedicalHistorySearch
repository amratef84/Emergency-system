<?php

namespace app\models;

use yii\base\Model;
use yii\data\ActiveDataProvider;
use app\models\PatientMedicalHistory;


class PatientMedicalHistorySearch extends PatientMedicalHistory
{
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['Patient_Id ','Disease_ID','Hosp_id'], 'integer'],
            [['Date_Time', 'Disease_Code', 'Disease_Status', 'Disease_Since'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = PatientMedicalHistory::find();

        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'Patient_Id ' => $this->Patient_Id ,
        ]);

        $query->andFilterWhere(['like', 'Date_Time', $this->Date_Time])
            ->andFilterWhere(['like', 'Disease_Id ', $this->Disease_Id ])
            ->andFilterWhere(['like', 'Disease_Status ', $this->Disease_Status ])
            ->andFilterWhere(['like', 'Disease_Since', $this->Disease_Since])
            ->andFilterWhere(['like', 'Hosp_id ', $this->Hosp_id ]);

        return $dataProvider;
    }
}
